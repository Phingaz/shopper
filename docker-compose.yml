version: "3.8"

services:
  # MongoDB service
  mongo:
    image: mongo:latest
    container_name: mongo
    restart: always
    volumes:
      - mongo-data:/data/db
    networks:
      - shopper
    healthcheck:
      test: echo 'db.runCommand("ping").ok' | mongosh localhost:27017/test --quiet
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 1s

  # MinIO service
  minio:
    image: minio/minio:latest
    container_name: minio
    restart: always
    volumes:
      - minio-data:/data
    environment:
      MINIO_ROOT_USER: minioadmin
      MINIO_ROOT_PASSWORD: 8@GvL#2uD!wz3T*mKp9F&Qx
    command: server /data --console-address ":9001"
    networks:
      - shopper
    ports:
      - "9000:9000"
      - "9001:9001"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 10s

  # Node.js application
  app:
    build: .
    container_name: server
    restart: always
    ports:
      - "3001:3001"
    environment:
      GEMINI_API_KEY: ${GEMINI_API_KEY}
      MONGO_URL: mongodb://mongo:27017/readings
      MINIO_ENDPOINT: minio
      MINIO_PORT: 9000
      MINIO_ROOT_USER: minioadmin
      MINIO_ROOT_PASSWORD: 8@GvL#2uD!wz3T*mKp9F&Qx
    depends_on:
      mongo:
        condition: service_healthy
      minio:
        condition: service_healthy
    networks:
      - shopper
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3001/api/v1/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 1s

volumes:
  mongo-data:
  minio-data:

networks:
  shopper:
